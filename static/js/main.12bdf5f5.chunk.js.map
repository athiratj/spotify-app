{"version":3,"sources":["spotify.js","components/Login.js","components/SidebarOptions.js","components/Datalayer.js","components/Sidebar.js","components/Header.js","components/SongRow.js","components/Body.js","components/Footer.js","components/Player.js","App.js","reducer.js","serviceWorker.js","index.js"],"names":["loginUrl","join","Login","className","src","alt","href","SidebarOptions","title","Icon","DataLayerContext","createContext","DataLayer","reducer","initialState","children","Provider","value","useReducer","useDataLayerValue","useContext","Sidebar","playlists","console","log","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","playlist","name","Header","spotify","user","placeholder","type","Avatar","display_name","images","url","SongRow","track","album","artists","artist","Body","discover_weekly","description","fontSize","tracks","item","Footer","Grid","container","spacing","xs","Slider","aria-labelledby","Player","s","SpotifyWebApi","App","token","dispatch","useEffect","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getPlaylist","then","response","getMyTopArtists","top_artists","getMe","getUserPlaylists","state","action","playing","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.12bdf5f5.chunk.js","sourcesContent":["export const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n\r\nconst clientId = \"882942128528488db2588fce62ba2b39\";\r\nconst redirectUri = \"http://localhost:3000/\";\r\nconst scopes = [\r\n  \"user-read-currently-playing\",\r\n  \"user-read-recently-played\",\r\n  \"user-read-playback-state\",\r\n  \"user-top-read\",\r\n  \"user-modify-playback-state\",\r\n];\r\n\r\nexport const getTokenFromResponse = () => {\r\n  return window.location.hash\r\n    .substring(1)\r\n    .split(\"&\")\r\n    .reduce((initial, item) => {\r\n      var parts = item.split(\"=\");\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n\r\n      return initial;\r\n    }, {});\r\n};\r\n\r\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n  \"%20\"\r\n)}&response_type=token&show_dialog=true`;\r\n","import React from \"react\";\r\nimport \"./Login.css\";\r\nimport { loginUrl } from \"../spotify\";\r\n\r\nfunction Login() {\r\n  return (\r\n    <div className=\"login\">\r\n      <img\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"\"\r\n      />\r\n      <a href={loginUrl}>Login With Spotify</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./SidebarOptions.css\";\r\n\r\nfunction SidebarOptions({ title = \"test\", Icon }) {\r\n  return (\r\n    <div className=\"sidebarOptions\">\r\n      {Icon && <Icon className=\"sidebarOptions__icon\" />}\r\n      {Icon ? <h4>{title}</h4> : <p>{title}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOptions;\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const DataLayerContext = createContext();\r\n\r\nexport const DataLayer = ({ reducer, initialState, children }) => (\r\n  <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </DataLayerContext.Provider>\r\n);\r\n\r\nexport const useDataLayerValue = () => useContext(DataLayerContext);\r\n","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport SidebarOptions from \"./SidebarOptions\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\r\nimport { useDataLayerValue } from \"./Datalayer\";\r\n\r\nfunction Sidebar() {\r\n  const [{ playlists }, dispatch] = useDataLayerValue();\r\n  console.log(playlists);\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <img\r\n        className=\"sidebar__logo\"\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"\"\r\n      />\r\n      <SidebarOptions Icon={HomeIcon} title=\"Home\" />\r\n      <SidebarOptions Icon={SearchIcon} title=\"Search\" />\r\n      <SidebarOptions Icon={LibraryMusicIcon} title=\"Your Library\" />\r\n      <br />\r\n      <strong className=\"sidebar__title\">PLAYLISTS</strong>\r\n      <hr />\r\n      {playlists?.items?.map((playlist) => (\r\n        <SidebarOptions title={playlist.name} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport { useDataLayerValue } from \"./Datalayer\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nfunction Header({ spotify }) {\r\n  const [{ user }, dispatch] = useDataLayerValue();\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__left\">\r\n        <SearchIcon />\r\n        <input\r\n          placeholder=\"Search for Artists, Songs, or Podcasts \"\r\n          type=\"text\"\r\n        />\r\n      </div>\r\n      <div className=\"header__right\">\r\n        <Avatar alt={user?.display_name} src={user?.images[0].url} />\r\n        <h4>{user?.display_name}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./SongRow.css\";\r\n\r\nfunction SongRow({ track }) {\r\n  console.log(track);\r\n  return (\r\n    <div className=\"songRow\">\r\n      <img className=\"songRow__album\" src={track.album.images[0].url} alt=\"\" />\r\n      <div className=\"songRow__info\">\r\n        <h1>{track.name}</h1>\r\n        <p>\r\n          {track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\r\n          {track.album.name}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SongRow;\r\n","import React from \"react\";\r\nimport \"./Body.css\";\r\nimport Header from \"./Header\";\r\nimport { useDataLayerValue } from \"./Datalayer\";\r\nimport SongRow from \"./SongRow\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\n\r\nfunction Body({ spotify }) {\r\n  const [{ discover_weekly }, dispatch] = useDataLayerValue();\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <Header spotify={spotify} />\r\n\r\n      <div className=\"body__info\">\r\n        <img src={discover_weekly?.images[0].url} alt=\"\" />\r\n        <div className=\"body__infoText\">\r\n          <strong>PLAYLIST</strong>\r\n          <h2>{discover_weekly?.name}</h2>\r\n          <p>{discover_weekly?.description}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"body__songs\">\r\n        <div className=\"body__icons\">\r\n          <PlayCircleFilledIcon className=\"body__shuffle\" />\r\n          <FavoriteIcon fontSize=\"large\" />\r\n          <MoreHorizIcon />\r\n        </div>\r\n\r\n        {discover_weekly?.tracks.items.map((item) => (\r\n          <SongRow track={item.track} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\r\nimport { Grid, Slider } from \"@material-ui/core\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer__left\">\r\n        <img className=\"footer__albumLogo\" src=\"\" alt=\"\" />\r\n        <div className=\"footer__songInfo\">\r\n          <h4>Yeah</h4>\r\n          <p>Usher</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"footer__center\">\r\n        <ShuffleIcon className=\"footer__green\" />\r\n        <SkipPreviousIcon className=\"footer__icon\" />\r\n\r\n        <PauseCircleOutlineIcon fontSize=\"large\" className=\"footer__icon\" />\r\n\r\n        <PlayCircleOutlineIcon fontSize=\"large\" className=\"footer__icon\" />\r\n\r\n        <SkipNextIcon className=\"footer__icon\" />\r\n        <RepeatIcon className=\"footer__green\" />\r\n      </div>\r\n      <div className=\"footer__right\">\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <PlaylistPlayIcon />\r\n          </Grid>\r\n          <Grid item>\r\n            <VolumeDownIcon />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Slider aria-labelledby=\"continuous-slider\" />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Body from \"./Body\";\r\nimport Footer from \"./Footer\";\r\nimport \"./Player.css\";\r\n\r\nfunction Player({ spotify }) {\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"player__body\">\r\n        <Sidebar />\r\n        <Body spotify={spotify} />\r\n      </div>\r\n      <Footer spotify={spotify} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Player;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\nimport { getTokenFromResponse } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Player from \"./components/Player\";\nimport { useDataLayerValue } from \"./components/Datalayer\";\n\nconst s = new SpotifyWebApi();\nfunction App() {\n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  useEffect(() => {\n    // Set token\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n\n    if (_token) {\n      s.setAccessToken(_token);\n\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      s.getPlaylist(\"17I8Yohdh2wEDRaeBg7N6V\").then((response) =>\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        })\n      );\n\n      s.getMyTopArtists().then((response) =>\n        dispatch({\n          type: \"SET_TOP_ARTISTS\",\n          top_artists: response,\n        })\n      );\n\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: s,\n      });\n\n      s.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user,\n        });\n      });\n\n      s.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists,\n        });\n      });\n    }\n  }, [token, dispatch]);\n\n  return (\n    <div className=\"app\">{token ? <Player spotify={s} /> : <Login />}</div>\n  );\n}\n\nexport default App;\n","export const initialState = {\r\n  user: null,\r\n  playlists: [],\r\n  spotify: null,\r\n  discover_weekly: null,\r\n  top_artists: null,\r\n  playing: false,\r\n  item: null,\r\n  token: null,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n\r\n    case \"SET_PLAYING\":\r\n      return {\r\n        ...state,\r\n        playing: action.playing,\r\n      };\r\n\r\n    case \"SET_ITEM\":\r\n      return {\r\n        ...state,\r\n        item: action.item,\r\n      };\r\n\r\n    case \"SET_DISCOVER_WEEKLY\":\r\n      return {\r\n        ...state,\r\n        discover_weekly: action.discover_weekly,\r\n      };\r\n\r\n    case \"SET_TOP_ARTISTS\":\r\n      return {\r\n        ...state,\r\n        top_artists: action.top_artists,\r\n      };\r\n\r\n    case \"SET_TOKEN\":\r\n      return {\r\n        ...state,\r\n        token: action.token,\r\n      };\r\n\r\n    case \"SET_SPOTIFY\":\r\n      return {\r\n        ...state,\r\n        spotify: action.spotify,\r\n      };\r\n\r\n    case \"SET_PLAYLISTS\":\r\n      return {\r\n        ...state,\r\n        playlists: action.playlists,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { DataLayer } from \"./components/Datalayer\";\nimport reducer, { initialState } from \"./reducer\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n      <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}